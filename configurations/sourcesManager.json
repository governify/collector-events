{
    "endpoints": {
        "github": {
            "events": { 
                "endpoint": "/repos/{github.repoOwner}/{github.repository}/events", 
                "payloadDate": "created_at"
            },
            "mergedPR": {
                "endpoint": "/repos/{github.repoOwner}/{github.repository}/pulls?state=closed",
                "payloadDate": "merged_at"
            },            
            "closedPR": {
                "endpoint": "/repos/{github.repoOwner}/{github.repository}/pulls?state=closed",
                "payloadDate": "closed_at"
            },
            "allPR": {
                "endpoint": "/repos/{github.repoOwner}/{github.repository}/pulls?state=all",
                "payloadDate": "created_at"
            },
            "closedPRFiles": {
                "endpoint": "/repos/{github.repoOwner}/{github.repository}/pulls?state=closed",
                "payloadDate": "closed_at"
            }
        },
        "githubCI": {
            "builds": {
                "endpoint": "/repos/{github.repoOwner}/{github.repository}/actions/runs",
                "payloadDate": "created_at"
            }
        },
        "gitlab": {
            "events": { 
                "endpoint": "/projects/{gitlab.repoId}/events", 
                "payloadDate": "created_at"
            },
            "mergedMR": {
                "endpoint": "/projects/{gitlab.repoId}/merge_requests?state=merged",
                "payloadDate": "merged_at"
            },            
            "closedMR": {
                "endpoint": "/projects/{gitlab.repoId}/merge_requests?state=closed",
                "payloadDate": "closed_at"
            },
            "allMR": {
                "endpoint": "/projects/{gitlab.repoId}/merge_requests",
                "payloadDate": "created_at"
            },
            "newBranches": { 
                "endpoint": "/projects/{gitlab.repoId}/events", 
                "payloadDate": "created_at"
            },
            "updatedBranches": { 
                "endpoint": "/projects/{gitlab.repoId}/repository/branches", 
                "payloadDate": "commit.committed_date"
            },
            "closedBranches": { 
                "endpoint": "/projects/{gitlab.repoId}/repository/branches", 
                "payloadDate": "commit.committed_date"
            },
            "commits": { 
                "endpoint": "/projects/{gitlab.repoId}/repository/commits", 
                "payloadDate": "committed_date"
            },
            "releases": { 
                "endpoint": "/projects/{gitlab.repoId}/releases", 
                "payloadDate": "released_at"
            }
        },
        "ghwrapper": {
            "events": { 
                "endpoint": "/{github.repoOwner}/{github.repository}", 
                "payloadDate": "created_at"
            }
        },
        "pivotal": {
            "activity": {
                "endpoint": "/projects/{pivotal.projectId}/activity",
                "payloadDate": "occurred_at"
            }
        },
        "heroku": {
            "releases": {
                "endpoint": "/apps/{heroku.projectId}/releases",
                "payloadDate": "created_at"
            },
            "builds": {
                "endpoint": "/apps/{heroku.projectId}/builds",
                "payloadDate": "created_at"
            }
        },
        "travis": {
            "builds_public": {
                "endpoint": "/repo/{github.repoOwner}%2F{github.repository}/builds",
                "payloadDate": "started_at"
            },
            "builds_private": {
                "endpoint": "/repo/{github.repoOwner}%2F{github.repository}/builds",
                "payloadDate": "started_at"
            }
        },
        "codeclimate": {
            "coverage": {
                "endpoint": "/repos/[ccRepositoryId]/test_reports",
                "payloadDate": "attributes.committed_at"
            }
        },
        "redmine": {
            "newIssues": {
                "endpoint": "/projects/{redmine.projectId}/issues.json", 
                "payloadDate": "created_on"
            },
            "updatedIssues": {
                "endpoint": "/projects/{redmine.projectId}/issues.json", 
                "payloadDate": "updated_on"
            },
            "closedIssues": {
                "endpoint": "/projects/{redmine.projectId}/issues.json?status_id=closed", 
                "payloadDate": "closed_on"
            },
            "issuesMovedToInProgress": {
                "endpoint": "/projects/{redmine.projectId}/issues.json", 
                "payloadDate": "updated_on"
            }
        }
    },
    "substitutions": [
        "GITHUB.REPO_OWNER->github.repoOwner"
    ]
}